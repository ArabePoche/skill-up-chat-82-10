name: Build Mobile Apps

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [ netlify-deploy ]
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Bump version
        id: version
        run: |
          npm version ${{ github.event.inputs.version_bump || 'patch' }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          git add package.json
          git commit -m "chore: bump version to $VERSION"
          git tag "v$VERSION"
          git push origin main --tags

  build:
    needs: version
    strategy:
      matrix:
        platform: [android, ios]
    runs-on: ${{ matrix.platform == 'ios' && 'macos-latest' || 'ubuntu-latest' }}
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build web app
        run: npm run build
        
      - name: Setup Java (Android)
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          
      - name: Setup Android SDK
        if: matrix.platform == 'android'
        uses: android-actions/setup-android@v3
        
      - name: Copy production config
        run: |
          cp capacitor.config.prod.ts capacitor.config.ts
          
      - name: Sync Capacitor
        run: |
          npx cap sync ${{ matrix.platform }}
          
      - name: Build Android APK
        if: matrix.platform == 'android'
        run: |
          cd android
          ./gradlew assembleRelease
          
      - name: Build Android AAB
        if: matrix.platform == 'android'
        run: |
          cd android
          ./gradlew bundleRelease
          
      - name: Build iOS
        if: matrix.platform == 'ios'
        run: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -configuration Release -destination generic/platform=iOS -archivePath App.xcarchive archive
          
      - name: Upload Android artifacts
        if: matrix.platform == 'android'
        uses: actions/upload-artifact@v4
        with:
          name: android-release-${{ needs.version.outputs.version }}
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab
            
      - name: Upload iOS artifacts
        if: matrix.platform == 'ios'
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-${{ needs.version.outputs.version }}
          path: ios/App/App.xcarchive

  deploy-android:
    needs: [version, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-release-${{ needs.version.outputs.version }}
          path: ./artifacts/android
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          
      - name: Install Fastlane
        run: gem install fastlane
        
      - name: Deploy to Play Store
        env:
          ANDROID_SERVICE_ACCOUNT_JSON: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON }}
        run: |
          echo "$ANDROID_SERVICE_ACCOUNT_JSON" > service-account.json
          fastlane android deploy
          
  deploy-ios:
    needs: [version, build]
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download iOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: ios-release-${{ needs.version.outputs.version }}
          path: ./artifacts/ios
          
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          
      - name: Install Fastlane
        run: gem install fastlane
        
      - name: Deploy to App Store
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: fastlane ios deploy